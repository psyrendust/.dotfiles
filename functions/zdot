#!/usr/bin/env zsh
#
# Define zdot command
#
# Authors:
#   Larry Gordon
#
# Usage: zdot
#
# @see https://github.com/zsh-users/zsh-completions/blob/master/zsh-completions-howto.org#writing-simple-completion-functions-using-_describe
#
# License:
#   The MIT License (MIT) <http://psyrendust.mit-license.org/2021/license.html>
# ------------------------------------------------------------------------------

function zdot() {
  [[ $# -gt 0 ]] || {
    _zdot::help
    return 1
  }

  local command="$1"
  shift

  # Subcommand functions start with _ so that they don't
  # appear as completion entries when looking for `zdot`
  (( $+functions[_zdot::$command] )) || {
    _zdot::help
    return 1
  }

  _zdot::$command "$@"
}

function _zdot {
  local -a cmds subcmds
  cmds=(
    'help:Usage information'
    'alias:Get the value of an alias'
    'check:Check install'
    'clear:Clear the cache directory'
    'edit:Open dotfiles vscode workspace'
    'load:Source a file if it exists'
    'notes:Open notes folder in vscode'
    'purge:Purge antidote cache and zshrc-antidote-plugins.zsh'
    'reload:Reload the current zsh session'
    'reset:Purge zshrc-antidote-plugins.zsh'
    'update:Update dotfiles using antidote'
  )

  if (( CURRENT == 2 )); then
    _describe 'command' cmds
  fi

  return 0
}

if (( ! $+functions[compinit] )); then
  autoload -Uz compinit
  compinit
fi
compdef _zdot zdot

function _zdot::noop() {}

function _zdot::help() {
  cat <<EOF
Usage: zdot <command> [options]

Available commands:

  help                Print this help message
  alias  <alias>      Get the value of an alias
  check               Check install
  clear               Clear the cache directory
  edit                Open dotfiles vscode workspace
  load   <script>     Source a file if it exists
  notes               Open notes folder in vscode
  purge               Purge antidote cache and zshrc-antidote-plugins.zsh
  reload              Reload the current zsh session
  reset               Purge zshrc-antidote-plugins.zsh
  update              Update dotfiles using antidote

EOF
}

#
# Get the value of an alias.
#
# Arguments:
#    1. alias - The alias to get its value from
# STDOUT:
#    The value of alias $1 (if it has one).
# Return value:
#    0 if the alias was found,
#    1 if it does not exist
#
function _zdot::alias() {
  (( $+aliases[$1] )) && echo $aliases[$1]
}

function _zdot::check() {
  _zdot::load "$ZDOT_BIN/check-install"
}

function _zdot::clear() {
  rm -rf "$ZDOT_CACHE"
}

function _zdot::edit() {
  code "$ZDOT/dotfiles.code-workspace"
}

function _zdot::load() {
  [[ -z "$1" ]] && {
    cat <<EOF
Source a file if it exists

Usage: zdot load <script>

EOF
    return 1
  }

  [[ -f "$1" ]] && . "$1"
}

function _zdot::notes() {
  [[ -d "$HOME/workspace/notes" ]] && code "$HOME/workspace/notes"
  [[ -d "$HOME/dev/notes" ]] && code "$HOME/dev/notes"
}

function _zdot::purge() {
  [[ -d "$(antidote home)" ]] &&
    echo "[zdot] Remove antidote cache" &&
    rm -rf "$(antidote home)"

  zdot reset
  zdot reload
}

# Taken from OMZ
function _zdot::reload {
  echo "[zdot] removing completion cache"
  # Delete current completion cache
  command rm -f $_comp_dumpfile $ZSH_COMPDUMP

  echo "[zdot] reloading zsh"
  # Old zsh versions don't have ZSH_ARGZERO
  local zsh="${ZSH_ARGZERO:-${functrace[-1]%:*}}"
  # Check whether to run a login shell
  [[ "$zsh" = -* || -o login ]] && exec -l "${zsh#-}" || exec "$zsh"
}

function _zdot::reset() {
  [[ -f "$ZDOT_ANTIDOTE_PLUGIN_CACHE" ]] &&
    echo "[zdot] Remove $ZDOT_ANTIDOTE_PLUGIN_CACHE cache file" &&
    rm "$ZDOT_ANTIDOTE_PLUGIN_CACHE"
}

function _zdot::update() {
  echo "[zdot] Purge antidote cache and zshrc-antidote-plugins.zsh" &&
  zdot reset &&
  sleep 2 &&
  echo "[zdot] Check install" &&
  zdot check &&
  sleep 2 &&
  echo "[zdot] Update antidote and installed packages" &&
  antidote update &&
  sleep 2 &&
  echo "[zdot] Reload zsh" &&
  zdot reload
}
